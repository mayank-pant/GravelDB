plugins {
    id 'java'
    id 'me.champeau.jmh' version '0.7.0'
    id 'application'
}

group = 'GravelDB'
version = '0.0.4'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'

    implementation 'io.projectreactor:reactor-core:3.5.0'
    implementation 'io.netty:netty-all:4.1.97.Final'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.1.0-alpha1'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.16'

    testImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.37'
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.37'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.0-jre'
}

application {
    mainClass = "graveldb.Main"  // Replace with your main class
}

jmh {
    fork = 1
    warmupIterations = 3
    iterations = 5
    benchmarkMode = ['thrpt','avg']
    jmhTimeout = '15s'
    jmhVersion = '1.37'
    resultFormat = 'JSON'
    jvmArgs = ['-XX:StartFlightRecording=filename=./jmh.jfr,duration=30s']
    //profilers = ['gc', 'xperf']
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register('printRuntimeClasspath') {
    doLast {
        configurations.runtimeClasspath.each { println it }
    }
}